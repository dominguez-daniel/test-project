version: 2.1
commands:
  destroy_environment:
    steps:
      - run:
          name: Destroy environment
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name infraStack
          
jobs:
  build:
    docker:
      - image: circleci/node:16.10.0
    steps:
      - checkout
      - run: mkdir -p /tmp/workspace/build /tmp/artifacts/build
      - run: npm i
      - run: npm run build
      - run: cp build/* /tmp/workspace/build
      - run: cp build/* /tmp/artifacts/build
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - build
      - store_artifacts:
          path: /tmp/artifacts/build
          
  test:
    docker:
      - image: circleci/node:16.10.0
    steps:
      - checkout
      - run: npm i
      - run: npm run test

  analyze:
    docker:
      - image: circleci/node:16.10.0
    steps:
      - checkout
      - run: npm i
      - run: npm run analyze

  create_infrastructure:
    docker:
      - image: cimg/aws:2022.11
    steps:
      - checkout
      - run:
          name: Request made by user
          command: |
            aws sts get-caller-identity
      - run:
          name: Create CloudFormation Stack
          command: |
            aws cloudformation deploy \
              --template-file infra.yaml \
              --stack-name infraStack \
              --region us-east-1
      
  create_host_inventory:
    docker:
      - image: cimg/aws:2022.11
    steps:
      - checkout
      - run:
          name: Build dynamic inventory file
          command: |
            aws ec2 describe-instances --query 'Reservations[*].Instances[*].PublicIpAddress' --output text >> inventory.txt
      - run: 
          name: Print inventory
          command: |
            cat inventory.txt
      - run: mkdir -p /tmp/workspace/
      - run: mv inventory.txt /tmp/workspace/
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - inventory.txt

  configure_infrastructure:
    docker:
      - image: python:3.11-alpine
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["22:55:20:93:36:22:44:2c:ba:37:57:bb:32:70:57:e3"]
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Copy build from workspace to files
          command: |
            cp -R /tmp/workspace/build/* roles/setup/files/
      - run:
          name: Install dependencies
          command: |
            apk add --update ansible
      - run: 
          name: Configure Server
          command: | 
            ansible-playbook -i /tmp/workspace/inventory.txt main.yml

  smoke_test:
    docker:
      - image: alpine:latest
    steps:
      - run: apk add --update curl
      - run:
          name: Smoke Test
          command: |
            export IP=$(cat /tmp/workspace/inventory.txt | sed 1d)
            if curl -s ${IP} | grep "Math Module"
            then
              return 0
            else
              return 1
            fi

workflows:
  ci:
    jobs:
      - build
      - test:
          requires: 
            - build
      - analyze:
          requires: 
            - build
      - create_infrastructure:
          requires: 
            - test
            - analyze
      - create_host_inventory:
          requires:
            - create_infrastructure
      - configure_infrastructure:
          requires: 
            - create_host_inventory
      - smoke_test:
          requires:
            - configure_infrastructure